# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
#                                                                                               #
#            This was created by Funnytom118 & Osto468                                          #
#   This is copywritten under the GNU GPLv3 License for Funnytom118 & Osto468 only.             #
#                                                                                               #
#    You may not copy, or edit any of the code inside of this file (excluding options section)  #
#               Editing anything in here WILL break the plugin.                                 #
#                                                                                               #
#                                         VERSION 1.0                                           #
#                                                                                               #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
#                                                                                               #
#     You can edit the 'options' section below, to configure it the way you want it to be.      #
#      We have already set some default messages, so you can keep those if you would like.      #
#                                                                                               #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
options:
  prefix: VEssentials                                                     #Prefix in front of all major commands
  permprefix: vessentials                                                 #For example, permission nodes will be {permprefix}.fly
  permmsg: You don't have permission!                                     #No permission message
  notonline: &4Error: &cThe set player isn't online                       #The error message displayed when a player isn't online
  specify: &4Error: &cPlease specify a player.                            #The error message displayed when a player isn't set
  startbal: 100                                                           #The starting balance of your players. Only add numbers here. Lowest is 0.
  feedcd: a minute                                                        #The cooldown between using /feed. Make a prefix [like a or 2] and then use minutes/hours/seconds/days. Use singular if it is only one (timeframe)
  healcd: a minute                                                        #The cooldown between using /heal. Make a prefix [like a or 2] and then use minutes/hours/seconds/days. Use singular if it is only one (timeframe)
  kitcd: a day                                                            #The cooldown between using each kit the player has permission to. Make a prefix [like a or 2] and then use minutes/hours/seconds/days. Use singular if it is only one (timeframe)
  spawnworld: world                                                       #The name of the world your spawn is located in
  basecolor1: &b                                                          #The main color of all messages (Must include the & code)
  basecolor2: &9                                                          #The secondary color of all messages (Must include the & code)
  basecolor3: &8                                                          #The 'arrow' color of all messages (Must include the & code)
  basecolor4: &7                                                          #The information color of all messages (Must include the & code)
  
#http://wiki.ess3.net/wiki/Command_Reference for alphabetical ordering of commands which are currently in Essentials.
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
#                                                                                               #
#          DO NOT edit anything under this line, or you will break the code.                    #
#                                                                                               #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
 
#http://wiki.ess3.net/wiki/Command_Reference for alphabetical ordering of commands which are currently in Essentials.
			


on first join:
  set {vessentials::balance::%player's uuid%} to {@startbal}
on damage:
  if {vessentials::god::%victim's uuid%} is true:
    cancel event
on respawn:
  teleport player to the spawn point of {@spawnworld}
on join:
  if {vessentials::balance::%player's uuid%} isn't set:
    set {vessentials::balance::%player's uuid%} to {@startbal}

# # # # # # # # # # # # # # # # # # # # #
#             Chat Coloring             #
# # # # # # # # # # # # # # # # # # # # #

function removeColors(text: string) :: text:
  set {_colors::*} to integers from 0 to 9 and split "abcdef" by ""
  set {_text::*} to {_text} split by ""
  loop {_colors::*}:
    if {_text} contains "&%loop-value%":
      player doesn't have permission "vessentials.color.&%loop-value%" or "vessentials.color.all"
      loop {_text::*}:
        loop-value-2 = "&"
        {_text::%loop-index-2 parsed as int + 1%} = "%loop-value-1%"
        delete {_text::%loop-index-2%}
        delete {_text::%loop-index-2 parsed as int + 1%}
    set {_text} to join {_text::*} by ""
  return colored {_text}

function removeFormats(text: string) :: text:
  set {_colors::*} to "onmrl" split by ""
  set {_text::*} to {_text} split by ""
  loop {_colors::*}:
    if {_text} contains "&%loop-value%":
      player doesn't have permission "{@permprefix}.chat.&%loop-value%" or "{@permprefix}.chat.format"
      loop {_text::*}:
        loop-value-2 = "&"
        {_text::%loop-index-2 parsed as int + 1%} = "%loop-value-1%"
        delete {_text::%loop-index-2%}
        delete {_text::%loop-index-2 parsed as int + 1%}
    set {_text} to join {_text::*} by ""
  return colored {_text}

function removeMagic(text: string) :: text:
  set {_colors::*} to "k" split by ""
  set {_text::*} to {_text} split by ""
  loop {_colors::*}:
    if {_text} contains "&%loop-value%":
      player doesn't have permission "{@permprefix}.chat.&%loop-value%" or "{@permprefix}.chat.magic"
      loop {_text::*}:
        loop-value-2 = "&"
        {_text::%loop-index-2 parsed as int + 1%} = "%loop-value-1%"
        delete {_text::%loop-index-2%}
        delete {_text::%loop-index-2 parsed as int + 1%}
    set {_text} to join {_text::*} by ""
  return colored {_text}

# # # # # # # # # # # # # # # # # # # # #
#               "Cheats"                #
# # # # # # # # # # # # # # # # # # # # #
command /bigtree [<text>]:
  aliases: /largetree
  trigger:
    if the targeted block is not grass or dirt:
      message "{@prefix}Trees can only be grown on grass and dirt."
      stop
    if arg 1 is not set:
      grow tree of type large regular tree above the targeted block
      message "{@prefix}A tree has been grown above the block you are looking at."
      stop
    if arg 1 is set:
      if arg 1 is "oak":
        grow tree of type large regular tree above the targeted block
        message "{@prefix}An oak tree has been grown above the block you are looking at."
        stop
      if arg 1 is "spruce":
        grow tree of type tall redwood above the targeted block
        message "{@prefix}A spruce tree has been grown above the block you are looking at."
        stop
      if arg 1 is "jungle":
        grow tree of type tall jungle tree above the targeted block
        message "{@prefix}A jungle tree has been grown above the block you are looking at."
        stop
      else:
        send "{@prefix}%arg 1% is not a tree type. The only tree types are oak, spruce, and jungle."
        stop
command /break:
  permission: {@permprefix}.break
  permission message: {@permmsg}
  aliases: /vessentials:break
  Description: Remove the block you are looking at!
  trigger:
    set targeted block to air
    send "{@prefix} Block was removed" to player
    stop
#/condense
#/enchant
command /exp [<text>] [<integer>] [<Player>]:
  permission: {@permprefix}.exp
  permission message: {@permmsg}
  aliases: /xp, /experience, /vessentials:exp, /vessentials:xp, /vessentials:experience
  description: Change the experience of a player
  trigger:
    if arg 1 is set:
      if arg 1 is "add":
        if arg 2 is set:
          if arg 2 is a number:
            if arg 3 is set:
              if arg 3 is online:
                increase the level of arg 3 by arg 2
                stop
              if arg 3 isn't online:
                send "{@notonline}" to player
                stop
            if arg 3 isn't set:
              send "{@prefix} /exp <add|remove|set> <levels> <player>" to player
              stop
          else:
            send "{@prefix} /exp <add|remove|set> <levels> <player>" to player
            stop
        if arg 2 isn't set:
          send "{@prefix} /exp <add|remove|set> <levels> <player>" to player
          stop
      if arg 1 is "remove":
        if arg 2 is set:
          if arg 2 is a number:
            if arg 3 is set:
              if arg 3 is online:
                reduce the level of arg 3 by arg 2
                stop
              if arg 3 isn't online:
                send "{@notonline}" to player
                stop
            if arg 3 isn't set:
              send "{@prefix} /exp <add|remove|set> <levels> <player>" to player
              stop
          else:
            send "{@prefix} /exp <add|remove|set> <levels> <player>" to player
            stop
        if arg 2 isn't set:
          send "{@prefix} /exp <add|remove|set> <levels> <player>" to player
          stop
      if arg 1 is "set":
        if arg 2 is set:
          if arg 2 is a number:
            if arg 3 is set:
              if arg 3 is online:
                set the level of arg 3 to arg 2
                stop
              if arg 3 isn't online:
                send "{@notonline}" to player
                stop
            if arg 3 isn't set:
              send "{@prefix} /exp <add|remove|set> <levels> <player>" to player
              stop
          else:
            send "{@prefix} /exp <add|remove|set> <levels> <player>" to player
            stop
        if arg 2 isn't set:
          send "{@prefix} /exp <add|remove|set> <levels> <player>" to player
          stop
      else:
        send "{@prefix} /exp <add|remove|set> <levels> <player>" to player
        stop
    if arg 1 isn't set:
      send "{@prefix} /exp <add|remove|set> <levels> <player>" to player
      stop
command /feed [<Player>]:
  permission: {permprefix}.feed
  permission message: {@permmsg}
  aliases: /eat, /vessentials:feed, /vessentials:eat
  description: &6Fill your hunger bar!
  executable by: players 
  trigger:
    if arg 1 isn't set:
      set {_waited} to difference between {feed.%player's uuid%.lastused} and now
      if {_waited} is less than {@feedcd}:
        send "{@prefix} You have to wait another %{_waited}% seconds to execute this command" to player
        stop
      else:
        set the player's food level to 10
        set {feed.%player's uuid%.lastused} to now
        send "{@prefix} Your hunger was sated" to player
        stop
    if arg 1 is set:
      if arg 1 is online:
        player has permission "{@permprefix}.feed.others":
          set arg 1's food level to 10
          send "{@prefix} Your hunger was sated" to player
          stop
        else:
          send "{@permmsg}" to player
          stop
      else:
        send "{@notonline}" to player
        stop
#/firework
command /fly [<Player>]:
  permission: {@permprefix}.fly
  permission message: {permmsg}
  aliases: /vessentials:fly
  trigger:
    if arg 1 isn't set:
      if {vessentials::fly::%player's uuid%} is false:
        set player's fly mode to true
        send "{@prefix} Flight mode enabled" to player
        set {vessentials::fly::%arg 1's uuid%} to true
        stop
      if {vessentials::fly::%player's uuid%} is true:
        set player's fly mode to false
        send "{@prefix} Flight mode disabled" to player
        set {vessentials::fly::%player's uuid%} to false
        stop
      if {vessentials::fly::%player's uuid%} isn't set:
        set {vessentials::fly::%player's uuid%} to false
        send "{@prefix} Try again" to player
        stop
    if arg 1 is set:
      if player has permission "{@permprefix}.fly.others":
        if {vessentials::fly::%arg 1's uuid%} is false:
          set arg 1's fly mode to true
          send "{@prefix} Flight mode enabled for %arg 1%" to player
          send "{@prefix} Flight mode enabled" to arg 1
          set {vessentials::fly::%arg 1's uuid%} to true
          stop
        if {vessentials::fly::%arg 1's uuid%} is true:
          set arg 1's fly mode to false
          send "{@prefix} Flight mode disabled for %arg 1%" to player
          send "{@prefix} Flight mode disabled" to arg 1
          set {vessentials::fly::%arg 1's uuid%} to false
          stop
        if {vessentials::fly::%arg 1's uuid%} isn't set:
          set {vessentials::fly::%arg 1's uuid%} to false
          send "{@prefix} Try again" to player
          stop
command /gamemode [<text>] [<Player>]:
  permission: {@permprefix}.gamemode.survival
  permission message: {@permmsg}
  aliases: /gm, /vessentials:gamemode, /vessentials:gm
  trigger:
    if arg 1 is set:
      if arg 2 is set:
        if arg 2 isn't the player:
          if arg 2 is online:
            if arg 1 is "survival":
              if player has permission "{@permprefix}.survival.others":
                set arg 2's gamemode to survival
                send "{@prefix} Set gamemode &csurvival &6for %arg 2%" to player
                send "{@prefix} Your gamemode was changed to &csurvival" to arg 2
                stop
            if arg 1 is "s":
              if player has permission "{@permprefix}.survival.others":
                set arg 2's gamemode to survival
                send "{@prefix} Set gamemode &csurvival &6for %arg 2%" to player
                send "{@prefix} Your gamemode was changed to &csurvival" to arg 2
                stop
            if arg 1 is "0":
              if player has permission "{@permprefix}.survival.others":
                set arg 2's gamemode to survival
                send "{@prefix} Set gamemode &csurvival &6for %arg 2%" to player
                send "{@prefix} Your gamemode was changed to &csurvival" to arg 2
                stop
            if arg 1 is "creative":
              if player has permission "{@permprefix}.creative.others":
                set arg 2's gamemode to creative
                send "{@prefix} Set gamemode &ccreative &6for %arg 2%" to player
                send "{@prefix} Your gamemode was changed to &ccreative" to arg 2
                stop
            if arg 1 is "1":
              if player has permission "{@permprefix}.creative.others":
                set arg 2's gamemode to creative
                send "{@prefix} Set gamemode &ccreative &6for %arg 2%" to player
                send "{@prefix} Your gamemode was changed to &ccreative" to arg 2
                stop
            if arg 1 is "c":
              if player has permission "{@permprefix}.creative.others":
                set arg 2's gamemode to creative
                send "{@prefix} Set gamemode &ccreative &6for %arg 2%" to player
                send "{@prefix} Your gamemode was changed to &ccreative" to arg 2
                stop
            if arg 1 is "adventure":
              if player has permission "{@permprefix}.adventure.others":
                set arg 2's gamemode to adventure
                send "{@prefix} Set gamemode &cadventure &6for %arg 2%" to player
                send "{@prefix} Your gamemode was changed to &cadventure" to arg 2
                stop
            if arg 1 is "a":
              if player has permission "{@permprefix}.adventure.others":
                set arg 2's gamemode to adventure
                send "{@prefix} Set gamemode &cadventure &6for %arg 2%" to player
                send "{@prefix} Your gamemode was changed to &cadventure" to arg 2
                stop
            if arg 1 is "2":
              if player has permission "{@permprefix}.adventure.others":
                set arg 2's gamemode to adventure
                send "{@prefix} Set gamemode &cadventure &6for %arg 2%" to player
                send "{@prefix} Your gamemode was changed to &cadventure" to arg 2
                stop
            if arg 1 is "spectator":
              if player has permission "{@permprefix}.spectator.others":
                set arg 2's gamemode to spectator
                send "{@prefix} Set gamemode &cspectator &6for %arg 2%" to player
                send "{@prefix} Your gamemode was changed to &cspectator" to arg 2
                stop
            if arg 1 is "3":
              if player has permission "{@permprefix}.spectator.others":
                set arg 2's gamemode to spectator
                send "{@prefix} Set gamemode &cspectator &6for %arg 2%" to player
                send "{@prefix} Your gamemode was changed to &cspectator" to arg 2
                stop
            if arg 1 is "sp":
              if player has permission "{@permprefix}.spectator.others":
                set arg 2's gamemode to spectator
                send "{@prefix} Set gamemode &cspectator &6for %arg 2%" to player
                send "{@prefix} Your gamemode was changed to &cspectator" to arg 2
                stop
            else:
              send "{@prefix} /gamemode <survival|s|0|creative|c|1|adventure|a|2|spectator|sp|3> [player]" to player
          if arg 2 isn't online:
            send "{@notonline}" to player
        if arg 2 is the player:
          if arg 1 is "survival":
            if player has permission "{@permprefix}.survival":
              set arg 2's gamemode to survival
              send "{@prefix} Your gamemode was changed to &csurvival" to arg 2
              stop
          if arg 1 is "s":
            if player has permission "{@permprefix}.survival":
              set arg 2's gamemode to survival
              send "{@prefix} Your gamemode was changed to &csurvival" to arg 2
              stop
          if arg 1 is "0":
            if player has permission "{@permprefix}.survival":
              set arg 2's gamemode to survival
              send "{@prefix} Your gamemode was changed to &csurvival" to arg 2
              stop
          if arg 1 is "creative":
            if player has permission "{@permprefix}.creative":
              set arg 2's gamemode to creative
              send "{@prefix} Your gamemode was changed to &ccreative" to arg 2
              stop
          if arg 1 is "1":
            if player has permission "{@permprefix}.creative":
              set arg 2's gamemode to creative
              send "{@prefix} Your gamemode was changed to &ccreative" to arg 2
              stop
          if arg 1 is "c":
            if player has permission "{@permprefix}.creative":
              set arg 2's gamemode to creative
              send "{@prefix} Your gamemode was changed to &ccreative" to arg 2
              stop
          if arg 1 is "adventure":
            if player has permission "{@permprefix}.adventure":
              set arg 2's gamemode to adventure
              send "{@prefix} Your gamemode was changed to &cadventure" to arg 2
              stop
          if arg 1 is "a":
            if player has permission "{@permprefix}.adventure":
              set arg 2's gamemode to adventure
              send "{@prefix} Your gamemode was changed to &cadventure" to arg 2
              stop
          if arg 1 is "2":
            if player has permission "{@permprefix}.adventure":
              set arg 2's gamemode to adventure
              send "{@prefix} Your gamemode was changed to &cadventure" to arg 2
              stop
          if arg 1 is "spectator":
            if player has permission "{@permprefix}.spectator":
              set arg 2's gamemode to spectator
              send "{@prefix} Your gamemode was changed to &cspectator" to arg 2
              stop
          if arg 1 is "3":
            if player has permission "{@permprefix}.spectator":
              set arg 2's gamemode to spectator
              send "{@prefix} Your gamemode was changed to &cspectator" to arg 2
              stop
          if arg 1 is "sp":
            if player has permission "{@permprefix}.spectator":
              set arg 2's gamemode to spectator
              send "{@prefix} Your gamemode was changed to &cspectator" to arg 2
              stop
          else:
            send "{@prefix} /gamemode <survival|s|0|creative|c|1|adventure|a|2|spectator|sp|3> [player]" to player
      if arg 2 isn't set:
        if arg 1 is "survival":
          if player has permission "{@permprefix}.survival":
            set player's gamemode to survival
            send "{@prefix} Your gamemode was changed to &csurvival" to player
            stop
        if arg 1 is "s":
          if player has permission "{@permprefix}.survival":
            set player's gamemode to survival
            send "{@prefix} Your gamemode was changed to &csurvival" to player
            stop
        if arg 1 is "0":
          if player has permission "{@permprefix}.survival":
            set player's gamemode to survival
            send "{@prefix} Your gamemode was changed to &csurvival" to player
            stop
        if arg 1 is "creative":
          if player has permission "{@permprefix}.creative":
            set player's gamemode to creative
            send "{@prefix} Your gamemode was changed to &ccreative" to player
            stop
        if arg 1 is "1":
          if player has permission "{@permprefix}.creative":
            set player's gamemode to creative
            send "{@prefix} Your gamemode was changed to &ccreative" to player
            stop
        if arg 1 is "c":
          if player has permission "{@permprefix}.creative":
            set player's gamemode to creative
            send "{@prefix} Your gamemode was changed to &ccreative" to player
            stop
        if arg 1 is "adventure":
          if player has permission "{@permprefix}.adventure":
            set player's gamemode to adventure
            send "{@prefix} Your gamemode was changed to &cadventure" to player
            stop
        if arg 1 is "a":
          if player has permission "{@permprefix}.adventure":
            set player's gamemode to adventure
            send "{@prefix} Your gamemode was changed to &cadventure" to player
            stop
        if arg 1 is "2":
          if player has permission "{@permprefix}.adventure":
            set player's gamemode to adventure
            send "{@prefix} Your gamemode was changed to &cadventure" to player
            stop
        if arg 1 is "spectator":
          if player has permission "{@permprefix}.spectator":
            set player's gamemode to spectator
            send "{@prefix} Your gamemode was changed to &cspectator" to player
            stop
        if arg 1 is "3":
          if player has permission "{@permprefix}.spectator":
            set player's gamemode to spectator
            send "{@prefix} Your gamemode was changed to &cspectator" to player
            stop
        if arg 1 is "sp":
          if player has permission "{@permprefix}.spectator":
            set player's gamemode to spectator
            send "{@prefix} Your gamemode was changed to &cspectator" to player
            stop
        else:
          send "{@prefix} /gamemode <survival|s|0|creative|c|1|adventure|a|2|spectator|sp|3> [player]" to player
    if arg 1 isn't set:
      send "{@prefix} /gamemode <survival|s|0|creative|c|1|adventure|a|2|spectator|sp|3> [player]" to player

#/give

command /god [<Player>]:
  permission: {@permprefix}.god
  permission message: {@permmsg}
  aliases: /vessentials:god
  trigger:
    if arg 1 is set:
      if player has permission "{@permprefix}.god.others":
        if {vessentials::god::%arg 1's uuid%} is false:
          set {vessentials::god::%arg 1's uuid%} to true
          send "{@prefix} God mode enabled for %arg 1%" to player
          send "{@prefix} God mode enabled" to arg 1
        if {vessentials::god::%arg 1's uuid%} is true:
          set {vessentials::god::%arg 1's uuid%} to false
          send "{@prefix} God mode disabled for %arg 1%" to player
          send "{@prefix} God mode disabled" to arg 1
        if {vessentials::god::%arg 1's uuid%} isn't set:
          set {vessentials::god::%arg 1's uuid%} to false
          send "{@prefix} Try again" to player
      else:
        send "{@permmsg}" to player
    if arg 1 isn't set:
      if {vessentials::god::%player's uuid%} is false:
        set {vessentials::god::%player's uuid%} to true
        send "{@prefix} God mode enabled" to player
      if {vessentials::god::%player's uuid%} is true:
        set {vessentials::god::%player's uuid%} to false
        send "{@prefix} God mode disabled" to player
      if {vessentials::god::%players's uuid%} isn't set:
        set {vessentials::god::%players's uuid%} to false
        send "{@prefix} Try again" to player
#/hat

command /vessentials:heal [<Player>]:
  permission: {permprefix}.heal
  permission message: {@permmsg}
  aliases: /heal
  executable by: players 
  trigger:
    if arg 1 isn't set:
      set {_waited} to difference between {vessentials.heal.%player's uuid%.lastused} and now
      if {_waited} is less than {@healcd}:
        send "{@prefix} You have to wait another %{_waited}% seconds to execute this command" to player
        stop
      else:
        heal the player by 10 hearts
        set {vessentials.heal.%player's uuid%.lastused} to now
        send "{@prefix} Youhave been healed" to player
        stop
    if arg 1 is set:
      if arg 1 is online:
        player has permission "{@permprefix}.heal.others":
          heal arg 1 by 10 hearts
          send "{@prefix} You have been healed" to player
          stop
        else:
          send "{@permmsg}" to player
      else:
        send "{@notonline}" to player

#/item

command /createkit [<text>]:
  permission: {@permprefix}.createkit
  permission message: {@permmsg}
  aliases: /vessentials:createkit
  trigger:
    if arg 1 is set:
      player can't hold 36 wooden swords:
        if {vessentials::kits::%arg 1%} isn't set:
          set {_slot} to 0
          loop 36 times:
            set {vessentials::kits::%{_slot}%::%arg 1%} to slot {_slot} of player's inventory
            add 1 to {_slot}
          set {vessentials::kits::%arg 1%} to true
          add arg 1 to {vessentials::kits::*}
          wait 2 ticks
          send "{@prefix} Kit created" to player
        else:
          send "{@prefix} This kit already exists" to player
      player can hold 36 wooden swords:
        send "{@prefix} Your inventory is empty." to player
        stop
    else:
      send "{@prefix} /createkit <name>" to player

command /kit [<text>] [<Player>]:
  permission: {@permprefix}.kit
  permission message: {@permmsg}
  aliases: /vessentials:kit
  trigger:
    if arg 2 isn't set:
      set {_waited} to difference between {vessentials::kits::lastused::%arg 1%::%player's uuid%} and now
      if {_waited} is less than {@kitcd}:
        send "{@prefix} Please wait another %{_waited}% before you can redeem this kit again" to player
      else:
        if arg 1 is set:
          if player has permission "{@permprefix}.kit.%arg 1%":
            if {vessentials::kits::%arg 1%} is "true":
              if {_kitconfirm::%player%} is "false":
                if player can't hold 36 wooden swords:
                  set {_kitconfirm::%player%} to true
                  send "{@prefix} Please empty your inventory and press /kit %arg 1% again" to player
                  stop
                if player can hold 36 wooden swords:
                  set {_slot} to 0
                  loop 36 times:
                    set slot {_slot} of player to {vessentials::kits::%{_slot}%::%arg 1%}
                    add 1 to {_slot}
                  set {_kitconfirm::%player%} to false
                  set {vessentials::kits::lastused::%arg 1%::%player's uuid%} to now
                  send "{@prefix} Recieveing kit %arg 1%" to player
                  stop
              if {_kitconfirm::%player%} is "true":
                set {_slot} to 0
                loop 36 times:
                  set slot {_slot} of player to {vessentials::kits::%{_slot}%::%arg 1%}
                  add 1 to {_slot}
                set {_kitconfirm::%player%} to false
                set {vessentials::kits::lastused::%arg 1%::%player's uuid%} to now
                send "{@prefix} Recieveing kit %arg 1%" to player
                stop
            else:
              send "{@prefix} That kit doesn't exist" to player
              stop
          else:
            send "{@prefix} That kit doesn't exist" to player
            stop
        if arg 1 isn't set:
          send "{@prefix} These are all the kits available on the server: %{vessentials::kits::*}%" to player
          stop
    if arg 2 is set:
      if arg 1 is set:
        if player has permission "{@permprefix}.kits.others":
          if {vessentials::kits::%arg 1%} is "true":
            if player can't hold 36 wooden swords:
              send "{@prefix} %player% is trying to give you a(n) %arg 1% kit. However you don't have room for it. Please empty your inventory within 30 seconds" to arg 2
              send "{@prefix} The player doesn't have room for the kit. They will get the kit when they have emptied their inventory." to player
              wait 30 seconds
              set {_slot} to 0
              loop 36 times:
                set slot {_slot} of player to {vessentials::kits::%{_slot}%::%arg 1%}
                add 1 to {_slot}
              send "{@prefix} You have recieved a(n) %arg 1% kit from %player%" to arg 2
              stop
            if player can hold 36 wooden swords:
              set {_slot} to 0
              loop 36 times:
                set slot {_slot} of player to {vessentials::kits::%{_slot}%::%arg 1%}
                add 1 to {_slot}
              send "{@prefix} Successfully sent kit to %arg 2%" to player
              send "{@prefix} You have recieved a(n) %arg 1% kit from %player%" to arg 2
              stop
        else:
          send "{@permmsg}" to player
          stop
      if arg 1 isn't set:
        send "{@prefix} These are all the kits available on the server: %{vessentials::kits::*}%" to player
        stop
command /delkit [<text>]:
  permission: {@permprefix}.delkit
  permission message: {@permmsg}
  aliases: /vessentials:delkit
  trigger:
    if arg 1 is "all":
      delete {vessentials::kits::*}
      send "{@prefix} Removed all kits"
    else:
      if {vessentials::kits::%arg 1%} is "true":
        remove arg 1 from {vessentials::kits::*}
        delete {vessentials::kits::%arg 1%}
        set {_slot} to 0
        loop 36 times:
          delete {vessentials::kits::%{_slot}%::%arg 1%}
          add 1 to {_slot}
        send "{@prefix} Kit removed" to player
        stop
      else:
        remove arg 1 from {vessentials::kits::*}
        delete {vessentials::kits::%arg 1%}
        set {_slot} to 0
        loop 36 times:
          delete {vessentials::kits::%{_slot}%::%arg 1%}
          add 1 to {_slot}
        send "{@prefix} Kit removed" to player
        stop
    else:
      send "{@prefix} /delkit <name>" to player
      stop
#/more
#/ptime
#/repair
command /skull [<offlinePlayer>]:
  permission: {@permprefix}.skull
  permission message: {@permmsg}
  description: Get the skull of a player
  executable by: players
  aliases: /head, /face, /vessentials:skull, /vessentials:face, /vessentials:head
  trigger:
    give player the skull of argument
    send "{@prefix} Added the skull of %arg% to your inventory" to player
    stop
command /speed [<text>] [<number>] [<Player>]:
  permission: {@permprefix}.speed
  permission message: {@permmsg}
  executable by: players
  aliases: /vessentials:speed
  trigger:
    if arg 3 isn't set:
      if arg 1 is set:
        if arg 1 is "flying":
          if arg 2 is set:
            if arg 2 is between -1 and 1:
              set player's flying speed to arg 2
              send "{@prefix} Flying speed changed to %arg 2%" to player
              stop
            else:
              send "{@prefix} The speed has to be any one decimal number between -1 and 1. Like this: ""-0.1""" to player
              stop
          else:
            send "{@prefix} /speed <walking|flying> <speed> [player]" to player
            stop
        if arg 1 is "walking":
          if arg 2 is set:
            if arg 2 is between -1 and 1:
              set player's walking speed to arg 2
              send "{@prefix} Walking speed changed to %arg 2%" to player
              stop
            else:
              send "{@prefix} The speed has to be any one decimal number between -1 and 1. Like this: ""-0.1""" to player
              stop
          else:
            send "{@prefix} /speed <walking|flying> <speed> [player]" to player
            stop
        else:
          send "{@prefix} /speed <walking|flying> <speed> [player]" to player
          stop
      else:
        send "{@prefix} /speed <walking|flying> <speed> [player]" to player
        stop
    if arg 3 is set:
      player has permission "{@permprefix}.speed.others":
        if arg 3 is online:
          if arg 1 is set:
            if arg 1 is "flying":
              if arg 2 is set:
                if arg 2 is between -1 and 1:
                  set arg 3's flying speed to arg 2
                  send "{@prefix} Flying speed changed to %arg 2% for %arg 3%" to player
                  send "{@prefix} Your flying speed was changed to %arg 2%" to arg 3
                  stop
                else:
                  send "{@prefix} The speed has to be any one decimal number between -1 and 1. Like this: ""-0.1""" to player
                  stop
              else:
                send "{@prefix} /speed <walking|flying> <speed> [player]" to player
                stop
            if arg 1 is "walking":
              if arg 2 is set:
                if arg 2 is between -1 and 1:
                  set arg 3's walking speed to arg 2
                  send "{@prefix} Walking speed changed to %arg 2% for %arg 3%" to player
                  send "{@prefix} Your walking speed was changed to %arg 2%" to arg 3
                  stop
                else:
                  send "{@prefix} The speed has to be any one decimal number between -1 and 1. Like this: ""-0.1""" to player
                  stop
              else:
                send "{@prefix} /speed <walking|flying> <speed> [player]" to player
                stop
            else:
              send "{@prefix} /speed <walking|flying> <speed> [player]" to player
              stop
          else:
            send "{@prefix} /speed <walking|flying> <speed> [player]" to player
            stop
        if arg 3 isn't online:
          send "{@notonline}" to player
          stop
command /time [<text>]:
  permission: {@permprefix}.time
  permission message: {@permmsg}
  aliases: /vessentials:time
  trigger:
    if arg 1 is set:
      set time in the player's world to arg 1
      send "{@prefix} Time set to %arg 1%" to player
    else:
      send "{@prefix} /time <##:##|## am/pm>" to player
command /tree [<text>]:
  permission: {@permprefix}.tree
  permission message: {@permmsg}
  aliases: /vessentials:tree
  trigger:
    if the targeted block is not grass or dirt:
      message "{@prefix}Trees can only be grown on grass and dirt."
      stop
    if arg 1 is not set:
      grow tree of type any tree above the targeted block
      message "{@prefix}A tree has been grown above the block you are looking at."
      stop
    if arg 1 is set:
      if arg 1 is "oak":
        grow tree of type any regular tree above the targeted block
        message "{@prefix}An oak tree has been grown above the block you are looking at."
        stop
      if arg 1 is "spruce":
        grow tree of type any redwood above the targeted block
        message "{@prefix}A spruce tree has been grown above the block you are looking at."
        stop
      if arg 1 is "jungle":
        grow tree of type any jungle tree above the targeted block
        message "{@prefix}A jungle tree has been grown above the block you are looking at."
        stop
      else:
        send "{@prefix}%arg 1% is not a tree type. The only tree types are oak, spruce, and jungle."
        stop
#/unlimited
#/workbench
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#                                            TELEPORTATION                                  #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
command /setspawn:
  permission: {@permprefix}.setspawn
  permission message: {@permmsg}
  executable by: players
  aliases: /vessentials:setspawn
  trigger:
    set {vessentials::spawn} to player's location
    send "{@prefix} Spawn location set!"
    set the spawn point of "{@spawnworld}" to player's location
    stop
command /spawn [<Player>]:
  permission: {@permprefix}.spawn
  permission message: {@permmsg}
  executable by: players and console
  aliases: /vessentials:spawn
  trigger:
    if arg 1 isn't set:
      teleport player to {vessentials::spawn}
      send "{@prefix} Teleporting you to spawn!" to player
      stop
    if arg 1 is set:
      player has permission "{@permprefix}.spawn.others":
        if arg 1 is online:
          teleport arg 1 to {vessentials::spawn}
          send "{@prefix} %player% teleported you to spawn" to arg 1
          send "{@prefix} Teleport %arg 1% to spawn" to player
          stop
        if arg 1 isn't online:
          send "{@notonline}" to player
          stop
      else:
        send "{@permmsg}" to player
        stop
command /sethome [<text>]:
  permission: {@permprefix}.sethome
  permission message: {@permmsg}
  aliases: /vessentials:sethome
  trigger:
    if arg 1 is set:
      set {vessentials::home::%arg 1%::%player's uuid%} to player's location
      send "{@prefix} Home set" to player
      add arg 1 to {vessentials::homes::%player's uuid%::*}
      stop
    if arg 1 isn't set:
      send "{@prefix} /sethome <name>" to player
command /home [<text>]:
  permission: {@permprefix}.home
  permission message: {@permmsg}
  aliases: /vessentials:home
  trigger:
    if arg 1 is set:
      if {vessentials::home::%arg 1%::%player's uuid%} is set:
        teleport player to {vessentials::home::%arg 1%::%player's uuid%}
        send "{@prefix} Teleporting" to player
        stop
      else:
        send "{@prefix} That home isn't specified"
    if arg 1 isn't set:
      send "{@prefix} %{vessentials::homes::%player's uuid%::*}%"
      stop
command /delhome [<text>]:
  permission: {@permprefix}.delhome
  permission message: {@permmsg}
  aliases: /vessentials:delhome
  trigger:
    if arg 1 is set:
      if {vessentials::home::%arg 1%::%player's uuid%} is set:
        delete {vessentials::home::%arg 1%::%player's uuid%}
        remove arg 1 from {vessentials::homes::%player's uuid%::*}
        send "{@prefix} Home removed" to player
        stop
      if {vessentials::home::%arg 1%::%player's uuid%} isn't set:
        send "{@prefix} That home doesn't exist" to player
        stop
    else:
      send "{@prefix} /delhome <name>" to player
      stop
command /setwarp [<text>]:
  permission: {@permprefix}.setwarp
  permission message: {@permmsg}
  aliases: /vessentials:setwarp
  trigger:
    if arg 1 is set:
      set {vessentials::warp::%arg 1%} to player's location
      send "{@prefix} Warp set" to player
      add arg 1 to {vessentials::warps::*}
      stop
    if arg 1 isn't set:
      send "{@prefix} /setwarp <name>" to player
command /warp [<text>]:
  permission: {@permprefix}.warp
  permission message: {@permmsg}
  aliases: /vessentials:warp
  trigger:
    if arg 1 is set:
      if {vessentials::warp::%arg 1%} is set:
        teleport player to {vessentials::warp::%arg 1%}
        send "{@prefix} Teleporting..." to player
        stop
      else:
        send "{@prefix} That warp doesn't exist"
    if arg 1 isn't set:
      send "{@prefix} Available warps: %{vessentials::warps::*}%"
      stop
command /delwarp [<text>]:
  permission: {@permprefix}.delwarp
  permission message: {@permmsg}
  aliases: /vessentials:delwarp
  trigger:
    if arg 1 is set:
      if {vessentials::warp::%arg 1%} is set:
        delete {vessentials::warp::%arg 1%}
        remove arg 1 from {vessentials::warps::*}
        send "{@prefix} Warp removed" to player
        stop
      if {vessentials::warp::%arg 1%} isn't set:
        send "{@prefix} That warp doesn't exist" to player
        stop
    else:
      send "{@prefix} /delwarp <name>" to player
      stop
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#                                            ECONOMY                                        #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
command /balance [<offlinePlayer>]:
  permission: {@permprefix}.balance
  permission message: {@permmsg}
  aliases: /money, /bal, /vessentials:balance, /vessentials:money, /vessentials:bal
  trigger:
    if arg 1 is set:
      send "{@prefix} &aBalance of %arg 1%&a: &c$%{vessentials::balance::%arg 1's uuid%}%" to player
    if arg 1 isn't set:
      send "{@prefix} &aBalance: &c$%{vessentials::balance::%player's uuid%}%" to player
command /eco [<text>] [<Player>] [<integer>]:
  permission: {@permprefix}.eco
  permission message: {@permmsg}
  aliases: /economy, /vessentials:eco, /vessentials:economy
  trigger:
    if arg 3 is greater than 0:
      if arg 2 is set:
        if arg 1 is "set":
          set {vessenitals::balance::%arg 2's uuid%} to arg 3
          send "{@prefix} &aSet %arg 2%'s balance to %arg 3%" to player
          send "{@prefix} &a%player% &cset your balance to &c$%arg 3%" to arg 2
        if arg 1 is "take":
          remove arg 3 from {vessentials::balance::%arg 2's uuid%}
          send "{@prefix} &aRemoved &c$%arg 3% &afrom player's balance. New balance: &c$%{vessentials::balance::%arg 2's uuid%}%" to player
          send "{@prefix} &a%player% took &c$%arg 3% &afrom your balance. New balance: &c$%{vessentials::balance::%arg 2's uuid%}%" to arg 2
          stop
        if arg 1 is "give":
          add arg 3 to {vessentials::balance::%arg 2's uuid%}
          send "{@prefix} &aAdded &c$%arg 3% &ato player's balance. New balance: &c$%{vessentials::balance::%arg 2's uuid%}%" to player
          send "{@prefix} &a%player% added &c$%arg 3% &ato your balance. New balance: &c$%{vessentials::balance::%arg 2's uuid%}%" to arg 2
          stop
        if arg 1 is "reset":
          set {vessentials::balance::%arg 2's uuid%} to {@startbal}
          send "{@prefix} &aSet the balance of %arg 2% to &c${@startbal}" to player
          send "{@prefix} &a%player% reset your balance. New balance: &c$%{vessentials::balance::%arg 2's uuid%}%" to arg 2
        else:
          send "{@prefix} /eco <take|give|reset|set> <player> <amount>" to player
      else:
        send "{@specify}" to player
    else:
      send "{@prefix} /eco <take|give|reset|set> <player> <amount>" to player
command /pay [<Player>] [<integer>]:
  permission: {@permprefix}.pay
  permission message: {@permmsg}
  aliases: /vessentials:pay
  trigger:
    if arg 1 is online:
      if arg 2 is greater or equal to 0.001:
        remove arg-2 from {vessentials::balance::%player's uuid%}
        add arg-2 to {vessentials::balance::%arg 1's uuid%}
        send "{@prefix} &c%arg 2% &awas sent to &c%arg 1%" to player
        send "{@prefix} &aYou have recieved %arg 2% from %player%" to arg 1
      else:
        send "{@prefix} Please specify an amount to send" to player
    else:
      send "{@notonline}" to player
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#                                        RANDOM SHIT                                        #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
command /clearinventory [<player>]:
  permission: {@permprefix}.clearinventory
  permission message: {@permmsg}
  aliases: /ci, /clear, /vessentials:ci, /vessentials:clear, /vessentials:clearinventory
  trigger:
    if arg 1 is not set:
      send "{@prefix}Your inventory has been cleared."
      clear the player's inventory
      stop
    if arg 1 is set:	
      if player has permission "{@permprefix}.clearinventory.others":
        send "{@prefix}%arg 1%'s inventory has been cleared."		
        clear the inventory of arg 1									
        stop	
      else:
        send "{@permmsg}"
        stop
command /killall [<entity>] [<text>]:
  permission: {@permprefix}.killall
  permission message: {@permmsg}
  aliases: /vessentials:killall
  trigger:
    if arg 2 isn't set:
      if arg 1 is set:
        kill all arg 1 in the player's world
        clear drops
        send "{@prefix} Killed all %arg 1%" to player
        stop
      if arg 1 isn't set:
        send "{@prefix} /killall <entity> [drops]" to player
        stop
    if arg 2 is set:
      if arg 2 is "drops":
        if arg 1 is set:
          kill all arg 1 in the player's world
          send "{@prefix} Killed all %arg 1%" to player
          stop
        if arg 1 isn't set:
          send "{@prefix} /killall <entity> [drops]" to player
          stop
